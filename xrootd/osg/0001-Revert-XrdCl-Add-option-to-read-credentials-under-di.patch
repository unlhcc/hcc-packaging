From 71d64cbab3fc08810eca46e2169759d90b1b99c3 Mon Sep 17 00:00:00 2001
From: John Thiltges <jthiltges2@unl.edu>
Date: Wed, 11 Oct 2017 11:29:38 -0500
Subject: [PATCH] Revert "[XrdCl] Add option to read credentials under
 different fsuid/fsgid"

This reverts commit 38eabaecadfde54827bba659c75336277baa8ee5.
---
 src/XrdCl/XrdClUtils.hh           | 74 ---------------------------------------
 src/XrdCl/XrdClXRootDTransport.cc | 29 ---------------
 2 files changed, 103 deletions(-)

diff --git a/src/XrdCl/XrdClUtils.hh b/src/XrdCl/XrdClUtils.hh
index 9c152c17..a23d01bd 100644
--- a/src/XrdCl/XrdClUtils.hh
+++ b/src/XrdCl/XrdClUtils.hh
@@ -30,10 +30,6 @@
 
 #include <sys/time.h>
 
-#ifdef __linux__
-#include <sys/fsuid.h>
-#endif
-
 namespace XrdCl
 {
   //----------------------------------------------------------------------------
@@ -232,76 +228,6 @@ namespace XrdCl
     private:
       int pDescriptor;
   };
-
-#ifdef __linux__
-  //----------------------------------------------------------------------------
-  //! Scoped fsuid and fsgid setter, restoring original values on destruction
-  //----------------------------------------------------------------------------
-  class ScopedFsUidSetter
-  {
-    public:
-      //------------------------------------------------------------------------
-      //! Constructor
-      //------------------------------------------------------------------------
-      ScopedFsUidSetter(uid_t fsuid, gid_t fsgid) : pFsUid(fsuid), pFsGid(fsgid)
-      {
-        pOk = true;
-        pPrevFsUid = -1;
-        pPrevFsGid = -1;
-
-        //----------------------------------------------------------------------
-        //! Set fsuid
-        //----------------------------------------------------------------------
-        if(pFsUid >= 0) {
-          pPrevFsUid = setfsuid(pFsUid);
-
-          if(setfsuid(-1) != pFsUid) {
-            pOk = false;
-            return;
-          }
-        }
-
-        //----------------------------------------------------------------------
-        //! Set fsgid
-        //----------------------------------------------------------------------
-        if(pFsGid >= 0) {
-          pPrevFsGid = setfsgid(pFsGid);
-
-          if(setfsgid(-1) != pFsGid) {
-            pOk = false;
-            return;
-          }
-        }
-      }
-
-      //------------------------------------------------------------------------
-      //! Destructor
-      //------------------------------------------------------------------------
-      ~ScopedFsUidSetter() {
-        if(pPrevFsUid >= 0) {
-          setfsuid(pPrevFsUid);
-        }
-
-        if(pPrevFsGid >= 0) {
-          setfsgid(pPrevFsGid);
-        }
-      }
-
-      bool IsOk() const {
-        return pOk;
-      }
-
-    private:
-      int pFsUid;
-      int pFsGid;
-
-      int pPrevFsUid;
-      int pPrevFsGid;
-
-      bool pOk;
-  };
-#endif
-
 }
 
 #endif // __XRD_CL_UTILS_HH__
diff --git a/src/XrdCl/XrdClXRootDTransport.cc b/src/XrdCl/XrdClXRootDTransport.cc
index 7f43711d..664edbfe 100644
--- a/src/XrdCl/XrdClXRootDTransport.cc
+++ b/src/XrdCl/XrdClXRootDTransport.cc
@@ -1822,35 +1822,6 @@ namespace XrdCl
       return Status( stFatal, errAuthFailed );
 
     //--------------------------------------------------------------------------
-    // Retrieve secuid and secgid, if available. These will override the fsuid
-    // and fsgid of the current thread reading the credentials to prevent
-    // security holes in case this process is running with elevated permissions.
-    //--------------------------------------------------------------------------
-    char *secuidc = (ei.getEnv()) ? ei.getEnv()->Get("xrd.secuid") : 0;
-    char *secgidc = (ei.getEnv()) ? ei.getEnv()->Get("xrd.secgid") : 0;
-
-    int secuid = -1;
-    int secgid = -1;
-
-    if(secuidc) secuid = atoi(secuidc);
-    if(secgidc) secgid = atoi(secgidc);
-
-#ifdef __linux__
-    ScopedFsUidSetter uidSetter(secuid, secgid);
-    if(!uidSetter.IsOk()) {
-      log->Error( XRootDTransportMsg, "[%s] Error while setting (fsuid, fsgid) to (%d, %d)",
-                  hsData->streamName.c_str(), secuid, secgid );
-      return Status( stFatal, errAuthFailed );
-    }
-#else
-    if(secuid >= 0 || secgid >= 0) {
-      log->Error( XRootDTransportMsg, "[%s] xrd.secuid and xrd.secgid only supported on Linux.",
-                  hsData->streamName.c_str() );
-      return Status( stFatal, errAuthFailed );
-    }
-#endif
-
-    //--------------------------------------------------------------------------
     // Loop over the possible protocols to find one that gives us valid
     // credentials
     //--------------------------------------------------------------------------
-- 
2.13.6

